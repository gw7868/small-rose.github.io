<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建静态博客及踩坑问题</title>
    <url>/2020/05/13/hexo-problem/</url>
    <content><![CDATA[<p> 原来使用springboot自己捣鼓的博客，总是不够满意，就想着实在不行搞个静态博客，比较再三选择hexo,就用Hexo再捣鼓一个静态博客，折腾了几天也算有成果了。</p>
<a id="more"></a>
<h2 id="Hexo搭建静态博客及踩坑问题"><a href="#Hexo搭建静态博客及踩坑问题" class="headerlink" title="Hexo搭建静态博客及踩坑问题"></a>Hexo搭建静态博客及踩坑问题</h2><p>[TOC]</p>
<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><p>安装git环境，安装node环境，安装git for windows（或者其它git客户端）<br>github账号<br>本文环境如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo：4.2.1</span><br><span class="line">hexo-cli：3.1.0</span><br><span class="line">os：Windows_NT 10.0.18362 win32 x64</span><br><span class="line">http_parser：2.8.0</span><br><span class="line">node：8.12.0</span><br><span class="line">v8：6.2.414.66</span><br><span class="line">uv：1.19.2</span><br><span class="line">zlib：1.2.11</span><br><span class="line">ares：1.10.1-DEV</span><br><span class="line">modules：57</span><br><span class="line">nghttp2：1.32.0</span><br><span class="line">napi： 3</span><br><span class="line">openssl：1.0.2p</span><br><span class="line">icu：60.1</span><br><span class="line">unicode：10.0</span><br><span class="line">cldr：32.0</span><br><span class="line">tz：2017c</span><br></pre></td></tr></table></figure>

<h2 id="2-安装hexo及初始化"><a href="#2-安装hexo及初始化" class="headerlink" title="2.安装hexo及初始化"></a>2.安装hexo及初始化</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> D:hexo/    //换成你的目录</span><br><span class="line">$ npm install -g hexo-cli   //安装hexo脚手架</span><br><span class="line">$ hexo init     //Hexo 初始化 会自动在当前文件夹下下载搭建网站所需的所有文件</span><br><span class="line">$ npm install   //安装依赖包命令</span><br></pre></td></tr></table></figure>

<h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean      &#x2F;&#x2F;清空public文件夹内容</span><br><span class="line">hexo g 或  hexo generate   &#x2F;&#x2F;在hexo站点根目录下生成public文件夹，相关静态网页文件</span><br><span class="line">hexo s 或  hexo server     &#x2F;&#x2F;启动服务预览 http:&#x2F;&#x2F;localhost:4000</span><br><span class="line">hexo d 或  hexo deploy     &#x2F;&#x2F;部署站点，在本地生成.deploy_git文件夹，并将编译后的文件上传至 Git远程仓库，如github或自己搭建的远程服务器。</span><br></pre></td></tr></table></figure>
<p>也可以连起来使用：<font face="console" color="red" bgcolor='#fff'><code>hexo clean &amp; hexo g &amp; hexo s &amp;  hexo d</code></font></p>
<h2 id="4-创建链接页面"><a href="#4-创建链接页面" class="headerlink" title="4.创建链接页面"></a>4.创建链接页面</h2><p>命令<br><font color=red></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page  yourpagename</span><br></pre></td></tr></table></figure>
</font>
#### 创建about页面
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>
修改source/about/index.md文件即可。文件内可以使用markdown或html语法。

<h4 id="创建分类"><a href="#创建分类" class="headerlink" title="创建分类"></a>创建分类</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories   &#x2F;&#x2F;创建分类</span><br></pre></td></tr></table></figure>
<p>修改source/categories/index.md文件即可.<br>补充红色字体内容： <font color=red><code>type: &quot;categories&quot;</code></font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-05-14 21:51:42</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>那么在写文章的时候就可以在头部使用分类了，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo搭建静态博客及踩坑问题</span><br><span class="line">date: 2020-05-13</span><br><span class="line">categories: Hexo</span><br><span class="line">---</span><br><span class="line"> this is my article ...</span><br></pre></td></tr></table></figure>
<h4 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page tags         &#x2F;&#x2F;创建标签</span><br></pre></td></tr></table></figure>
<p>修改source/tags/index.md文件即可:<br>补充红色字体内容： <font color=red><code>type: &quot;tags&quot;</code></font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-05-14 21:51:42</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>那么在写文章的时候就可以在头部使用标签了，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo搭建静态博客及踩坑问题</span><br><span class="line">date: 2020-05-13</span><br><span class="line">categories: Hexo</span><br><span class="line">tags: Hexo</span><br><span class="line">---</span><br><span class="line"> this is my article ...</span><br></pre></td></tr></table></figure>

<h2 id="5-安装hexo常用插件（非必须）"><a href="#5-安装hexo常用插件（非必须）" class="headerlink" title="5.安装hexo常用插件（非必须）"></a>5.安装hexo常用插件（非必须）</h2><h4 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h4><p>选择一个自己喜欢的 Hexo 主题站：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>极简主题推荐：<br><a href="https://github.com/zhzy2017/hexo-theme-polarbear.git" target="_blank" rel="noopener">hexo-theme-polarbear</a><br><a href="https://github.com/zhzy2017/gd4Ark.github.io.git" target="_blank" rel="noopener">hexo-theme-polarbear  （gd4Ark的扩展版）</a> （下载后执行安装npm install）<br><a href="https://github.com/zhzy2017/hexo-theme-sky.git" target="_blank" rel="noopener">hexo-theme-sky</a><br><a href="https://github.com/zhzy2017/hexo-theme-xoxo.git" target="_blank" rel="noopener">hexo-theme-xoxo</a><br><a href="https://github.com/zhzy2017/hexo-theme-xoxo-plus.git" target="_blank" rel="noopener">hexo-theme-xoxo-plus</a></p>
<p>题外话，我对hexo-theme-polarbear扩展版进行补充搜索功能。</p>
<p>如安装主题hexo-theme-xoxo-plus：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zhzy2017/hexo-theme-xoxo-plus.git</span><br></pre></td></tr></table></figure>
<p>修改全局配置根目录_config.yml, 注意theme的值要和theme目录的主题的文件夹名字一致</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line"># landscape</span><br><span class="line">theme: hexo-theme-xoxo-plus</span><br></pre></td></tr></table></figure>
<p>启动预览即可，如果对该主题的设置请到主题目录下修改主题的配置文件_config.yml</p>
<h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install   hexo-generator-feed  --save   #订阅</span><br><span class="line">npm install   hexo-generator-search --save  #搜索</span><br></pre></td></tr></table></figure>
<p>这里说一下添加本地搜索，有的主题已经自己带了搜索功能，只要配置开启即可。如果没有带主题可以自己加上。<br><font color=red>特别说明：如果主题自带搜索，看自带搜索操作说明即可，如果主题无搜索看自定义模式说明即可。</font></p>
<p>第一步：安装搜索插件 <code>npm install hexo-generator-searchdb --save</code></p>
<p>第二步：根目录_config.yml文件配置添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>
<p>主题配置_config.yml添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search: </span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p>第三步:添加搜索框</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search-content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"pure-form"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"local-search-input"</span> <span class="attr">name</span>=<span class="string">"q"</span> <span class="attr">results</span>=<span class="string">"0"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">placeholder</span>=<span class="string">"搜索"</span> <span class="attr">class</span>=<span class="string">"pure-input pure-input-1"</span> <span class="attr">style</span>=<span class="string">"background-color: rgb(204, 232, 207);"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"local-search-result"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>第1种，主题自带搜索模式，有独立的search页面,生成页面前面已经讲到了，把代码放到source/search/index.md文件中即可。</p>
<p>第2种，自定义模式，直接加在首页，想加哪个位置看自己喜好，位置找主题下的布局文件夹_layout或layout/partials之类的文件夹下,里面有head.ejs或head.swig文件（如果不是请自己查找节点，文件反正就那些）,添加html代码</p>
<p>第四步：引入js</p>
<p>第1种，主题自带搜索模式，主题下的配置文件一般有scripts设置，直接配置路径，一般都有示例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scripts:</span><br><span class="line">#- &#x2F;&#x2F;cdn.bootcss.com&#x2F;zepto&#x2F;1.2.0&#x2F;zepto.min.js</span><br><span class="line">#- &#x2F;js&#x2F;xoxo.js</span><br><span class="line">  - &#x2F;js&#x2F;search.js</span><br></pre></td></tr></table></figure>
<p>第2种，自定义模式，没有scripts配置,就在找主题下的布局文件夹_layout或layout/中，有js.ejs或srcipt.ejs，<br>文件可以从这里拿：<a href="https://github.com/zhzy2017/hexo-search-plugin-snippets" target="_blank" rel="noopener">https://github.com/zhzy2017/hexo-search-plugin-snippets</a><br>把search.js 放到source\js目录下,引入使用也有不同的方法</p>
<p>第五步：css设置<br>有的带搜索的无须操作，没有的从下载hexo-search-plugin-snippets里面拿拷贝到source/css里面，引入即可，</p>
<p>第1种，主题自带搜索模式，一般不需要配置写在公共文件中，如果没有样式可以在主题下的配置文件一般有stylesheets设置，直接配置路径，一般都有示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stylesheets:</span><br><span class="line"># - &#x2F;css&#x2F;normalize.css</span><br><span class="line"> - &#x2F;&#x2F;cdn.bootcss.com&#x2F;pure&#x2F;1.0.0&#x2F;pure-min.css</span><br><span class="line"> - &#x2F;css&#x2F;xoxo.css</span><br></pre></td></tr></table></figure>
<p>第2种，自定义模式，跟配引入js类似，找一下主题目录ejs或swig文件引入，或者直接用css或less文件放到source/css目录下的某个文件中，这样不需要引文件</p>
<p>其他插件，具体使用自行搜索，一般是修改配置或添加代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-index-pin-top –save  #文章置顶插件 </span><br><span class="line">npm uninstall hexo-generator-index –save 	#文章置顶插件 </span><br><span class="line">npm i –save hexo-wordcount 	   #文章字数+阅读时长统计 	</span><br><span class="line">npm install hexo-baidu-url-submit –save 	#百度链接主动推送 	</span><br><span class="line">npm install hexo-deployer-ftpsync –save 	#hexo上传至FTP服务器 	</span><br><span class="line">npm install hexo-deployer-cos –save 	#hexo上传至腾讯云COS 	</span><br><span class="line">npm install hexo-deployer-aliyun –save 	#hexo上传至阿里云 	</span><br><span class="line">npm install –save hexo-admin 	#hexo管理插件 	</span><br><span class="line">hexo-blog-encrypt(请看文档) 	#hexo文章加密码 </span><br><span class="line">npm install leancloud-storage –save 	#Valine评论 	</span><br><span class="line">Valine评论邮件通知 	Valine评论提醒</span><br></pre></td></tr></table></figure>
<p>使用参考链接参考<a href="https://blog.csdn.net/q2158798/article/details/82354154" target="_blank" rel="noopener">幻凡ss</a></p>
<h2 id="6-常见踩坑"><a href="#6-常见踩坑" class="headerlink" title="6.常见踩坑"></a>6.常见踩坑</h2><p>报错多在hexo g 的时候报错</p>
<h5 id="（1）YAMLException"><a href="#（1）YAMLException" class="headerlink" title="（1）YAMLException"></a>（1）YAMLException</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR Process failed: _posts&#x2F;hexo-problem.md</span><br><span class="line">YAMLException: end of the stream or a document separator is expected at line x, column y:</span><br><span class="line">at ...</span><br></pre></td></tr></table></figure>
<p>思路接解决：<br>A. 一般是因为缺少分隔符，缺少空格，<code>key: value</code> ，英文冒号后面留空格，一般错会提示哪个文件，第几行第几列。<br>B.其次是头部yaml配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">key: value</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>缺少也会导致文章内容报错，具体报错的行列位置如果没有问题，就检查头部或者附件标点，或分段测试，该方案适合文章报错<br>C.还有一些特殊字符，如<code>[ ]</code>也会导致报错，我在title中使用英文<code>[ ]</code>也会报错，但提示的位置没有问题，注意特殊字符使用</p>
<h5 id="（2）某个ejs或swig文件报错"><a href="#（2）某个ejs或swig文件报错" class="headerlink" title="（2）某个ejs或swig文件报错"></a>（2）某个ejs或swig文件报错</h5><p>（1）此类问题一般是使用某个主题之后会出现，注意主题下的配置文件_config.yml检查是否配置，参考（1）A的思路<br>（2）缺少相关插件如xoxo主题生成时就有readingTime的报错，安装了hexo-reading-time的插件后解决，如是其他同理网上搜一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install   hexo-reading-time --save</span><br></pre></td></tr></table></figure>
<p>(3)其他后续再补充</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos-jdk安装配置环境变量</title>
    <url>/2018/09/10/centos-config-jdk/</url>
    <content><![CDATA[<p> Centos上安装jdk，配置环境变量的方法</p>
<a id="more"></a>
<h2 id="Centos上jdk配置"><a href="#Centos上jdk配置" class="headerlink" title="Centos上jdk配置"></a>Centos上jdk配置</h2><p>[TOC]</p>
<h2 id="1-检查环境"><a href="#1-检查环境" class="headerlink" title="1.检查环境"></a>1.检查环境</h2><p>查看java版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p> 检查是否已经安装jdk，通常默认自认openjdk</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java-1.7.0-openjdk-1.7.0.111-2.6.7.8.el7.x86_64</span><br><span class="line">java-1.8.0-openjdk-1.8.0.102-4.b14.el7.x86_64</span><br><span class="line">java-1.8.0-openjdk-headless-1.8.0.102-4.b14.el7.x86_64</span><br><span class="line">java-1.7.0-openjdk-headless-1.7.0.111-2.6.7.8.el7.x86_64</span><br></pre></td></tr></table></figure>
<p> 如果要卸载,需要root用户权限才可以执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps java-1.7.0-openjdk-1.7.0.111-2.6.7.8.el7.x86_64</span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-1.8.0.102-4.b14.el7.x86_64</span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.102-4.b14.el7.x86_64</span><br><span class="line">rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.111-2.6.7.8.el7.x86_64</span><br></pre></td></tr></table></figure>
<p>再次查看java版本，如提示未找到命令则删除成功。</p>
<h2 id="2-上传jdk安装文件"><a href="#2-上传jdk安装文件" class="headerlink" title="2.上传jdk安装文件"></a>2.上传jdk安装文件</h2><h4 id="上传方法"><a href="#上传方法" class="headerlink" title="上传方法"></a>上传方法</h4><p>（1）可以联网直接下载即可<br>（2）ssh可以安装用rz/sz上传下载<br>（3）ftp自行安装ftp服务，关于安装教程可到：</p>
<p>上传jdk-7u80-linux-x64.tar.gz到你的目录后，<br>解压后移动到 <code>/usr/jdk1.7.0_80</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-7u80-linux-x64.tar.gz</span><br><span class="line">cp  jdk-7u80 /usr/jdk1.7.0_80</span><br></pre></td></tr></table></figure>
<p>【关于解压命令大全可以移步：】</p>
<h2 id="2-配置关变量"><a href="#2-配置关变量" class="headerlink" title="2.配置关变量"></a>2.配置关变量</h2><p>/etc/profile全局变量配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>.bash_profile为root用户的环境变量。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/</span><br><span class="line">ls -a</span><br><span class="line">vi .bash_profile</span><br></pre></td></tr></table></figure>
<p>二者均可，建议修改用户环境变量。<br>在文件末尾增加java环境变量即可,听说CentOS6上面的是JAVAHOME，CentOS7是{JAVA_HOME}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># .bash_profile</span><br><span class="line"></span><br><span class="line"># Get the aliases and functions</span><br><span class="line">if [ -f ~&#x2F;.bashrc ]; then</span><br><span class="line">        . ~&#x2F;.bashrc</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># User specific environment and startup programs</span><br><span class="line"></span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;jdk1.7.0_80</span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;rt.jar:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br><span class="line">PATH&#x3D;$PATH:$HOME&#x2F;bin:$JAVA_HOME&#x2F;bin</span><br><span class="line"></span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>
<h2 id="3-让刚刚设置的环境变量生效"><a href="#3-让刚刚设置的环境变量生效" class="headerlink" title="3.让刚刚设置的环境变量生效"></a>3.让刚刚设置的环境变量生效</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure>

<h2 id="4-再次验证是否配置成功"><a href="#4-再次验证是否配置成功" class="headerlink" title="4.再次验证是否配置成功"></a>4.再次验证是否配置成功</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>出现java版本号代表安装成功。</p>
]]></content>
      <categories>
        <category>Linux,Java</category>
      </categories>
      <tags>
        <tag>centos,Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos相关配置</title>
    <url>/2018/05/13/centos-config-some/</url>
    <content><![CDATA[<p> Centos网络配置 | Centos时间配置 | DNS解析问题</p>
<a id="more"></a>

<h2 id="Centos各种配置"><a href="#Centos各种配置" class="headerlink" title="Centos各种配置"></a>Centos各种配置</h2><h2 id="1-Centos网络配置"><a href="#1-Centos网络配置" class="headerlink" title="1.Centos网络配置"></a>1.Centos网络配置</h2><h4 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h4><p>有图形界面可以直接界面操作，没有界面可以参考一下：<br>（1）修改配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/sysconfig/network-scripts/</span><br></pre></td></tr></table></figure>
<p>修改对应网卡的配置，可以ifconfig看看用的网卡名。<br>修改相关配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">PROXY_METHOD&#x3D;none</span><br><span class="line">BROWSER_ONLY&#x3D;no</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6INIT&#x3D;yes</span><br><span class="line">IPV6_AUTOCONF&#x3D;yes</span><br><span class="line">IPV6_DEFROUTE&#x3D;yes</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;no</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;stable-privacy</span><br><span class="line">NAME&#x3D;ens192</span><br><span class="line">UUID&#x3D;64e7784d-8183-4db5-af4c-120203391708</span><br><span class="line">DEVICE&#x3D;ens192</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">IPADDR&#x3D;192.168.66.80</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">GATEWAY&#x3D;192.168.66.254</span><br><span class="line">IPV6_PRIVACY&#x3D;no</span><br></pre></td></tr></table></figure>
<p>（2）重启网络服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service network restart</span><br></pre></td></tr></table></figure>

<h2 id="2-Centos时间配置"><a href="#2-Centos时间配置" class="headerlink" title="2.Centos时间配置"></a>2.Centos时间配置</h2><p>设置时区同样,在 CentOS 7 中, 引入了一个叫 timedatectl 的设置设置程序.<br>用法很简单:<code>timedatectl # 查看系统时间方面的各种状态</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      Local time: 四 2014-12-25 10:52:10 CST</span><br><span class="line">  Universal time: 四 2014-12-25 02:52:10 UTC</span><br><span class="line">        RTC time: 四 2014-12-25 02:52:10</span><br><span class="line">        Timezone: Asia&#x2F;Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n&#x2F;a</span><br></pre></td></tr></table></figure>

<h4 id="列出所有时区"><a href="#列出所有时区" class="headerlink" title="列出所有时区"></a>列出所有时区</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ timedatectl list-timezones</span><br></pre></td></tr></table></figure>
<h4 id="将硬件时钟调整为与本地时钟一致-0-为设置为-UTC-时间"><a href="#将硬件时钟调整为与本地时钟一致-0-为设置为-UTC-时间" class="headerlink" title="将硬件时钟调整为与本地时钟一致, 0 为设置为 UTC 时间"></a>将硬件时钟调整为与本地时钟一致, 0 为设置为 UTC 时间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ timedatectl <span class="built_in">set</span>-local-rtc 1</span><br></pre></td></tr></table></figure>
<h4 id="设置系统时区为上海"><a href="#设置系统时区为上海" class="headerlink" title="设置系统时区为上海"></a>设置系统时区为上海</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>
<h4 id="直接修改时间时区"><a href="#直接修改时间时区" class="headerlink" title="直接修改时间时区"></a>直接修改时间时区</h4><p>其实不考虑各个发行版的差异化, 从更底层出发的话, 直接修改时间时区:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>

<h2 id="3-DNS解析问题"><a href="#3-DNS解析问题" class="headerlink" title="3.DNS解析问题"></a>3.DNS解析问题</h2><p>ping IP可以 ping 域名不通的时候</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /etc/resolve.conf</span><br></pre></td></tr></table></figure>
<p>增加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux,centos</category>
      </categories>
      <tags>
        <tag>centos配置</tag>
      </tags>
  </entry>
  <entry>
    <title>不同类型数据库字段类型和JAVA类型、sql类型对应关系</title>
    <url>/2020/05/13/db_type/</url>
    <content><![CDATA[<p>不同类型数据库字段类型和JAVA类型、sql类型对应关系。</p>
<a id="more"></a>

<p><img src="/images/db_jdbcType.jpg" alt="Image text"></p>
]]></content>
      <categories>
        <category>Java,DataBase</category>
      </categories>
      <tags>
        <tag>DataBase</tag>
      </tags>
  </entry>
  <entry>
    <title>开发常用传送门列表</title>
    <url>/2020/05/13/fast-door/</url>
    <content><![CDATA[<p>开发常用传送门列表</p>
<a id="more"></a>
]]></content>
      <categories>
        <category>Java,DataBase</category>
      </categories>
      <tags>
        <tag>DataBase</tag>
      </tags>
  </entry>
  <entry>
    <title>js让页面自动刷新</title>
    <url>/2019/11/09/js-auto-refresh/</url>
    <content><![CDATA[<p>js让页面自动刷新</p>
<a id="more"></a>

<h6 id="想让页面自动刷新"><a href="#想让页面自动刷新" class="headerlink" title="想让页面自动刷新?"></a>想让页面自动刷新?</h6><p>F12 —– 控制台 —– 使用下面代码，OK。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">timeout=prompt(<span class="string">"Set timeout (Second):"</span>);</span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">current=location.href;</span><br><span class="line"><span class="keyword">if</span>(timeout&gt;<span class="number">0</span>)</span><br><span class="line">setTimeout(<span class="string">'reload()'</span>,<span class="number">1000</span>*timeout);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">location.replace(current);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">setTimeout(<span class="string">'reload()'</span>,<span class="number">1000</span>*timeout);</span><br><span class="line">count++;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'每（'</span>+timeout+<span class="string">'）秒自动刷新,刷新次数：'</span>+count);</span><br><span class="line">fr4me=<span class="string">'&lt;frameset cols=\'*\'&gt;\n&lt;frame src=\''</span>+current+<span class="string">'\'/&gt;'</span>;</span><br><span class="line">fr4me+=<span class="string">'&lt;/frameset&gt;'</span>;</span><br><span class="line"><span class="keyword">with</span>(<span class="built_in">document</span>)&#123;write(fr4me);<span class="keyword">void</span>(close())&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java,DataBase</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
</search>
